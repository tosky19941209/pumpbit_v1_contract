/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IConfigurable,
  IConfigurableInterface,
} from "../../../../contracts/core/interfaces/IConfigurable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "liquidityFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralReturnFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralParentReturnFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "interestRate",
        type: "uint32",
      },
    ],
    name: "InvalidInterestRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "liquidationFeeRatePerPosition",
        type: "uint32",
      },
    ],
    name: "InvalidLiquidationFeeRatePerPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "liquidationVertexIndex",
        type: "uint8",
      },
    ],
    name: "InvalidLiquidationVertexIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "liquidityFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidLiquidityFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxFundingRate",
        type: "uint32",
      },
    ],
    name: "InvalidMaxFundingRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxLeveragePerLiquidityPosition",
        type: "uint32",
      },
    ],
    name: "InvalidMaxLeveragePerLiquidityPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxLeveragePerPosition",
        type: "uint32",
      },
    ],
    name: "InvalidMaxLeveragePerPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "maxPriceImpactLiquidity",
        type: "uint128",
      },
    ],
    name: "InvalidMaxPriceImpactLiquidity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxRiskRatePerLiquidityPosition",
        type: "uint32",
      },
    ],
    name: "InvalidMaxRiskRatePerLiquidityPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "protocolFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidProtocolFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "referralDiscountRate",
        type: "uint32",
      },
    ],
    name: "InvalidReferralDiscountRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "referralParentReturnFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidReferralParentReturnFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "referralReturnFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidReferralReturnFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "tradingFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidTradingFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "InvalidVertex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "InvalidVerticesLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAlreadyEnabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenNotEnabled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minMarginPerLiquidityPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxRiskRatePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "minMarginPerPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidationExecutionFee",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "interestRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFundingRate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.TokenConfig",
        name: "newCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "tradingFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidityFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralParentReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralDiscountRate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.TokenFeeRateConfig",
        name: "newFeeRateCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "maxPriceImpactLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "liquidationVertexIndex",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "balanceRate",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "premiumRate",
                type: "uint32",
              },
            ],
            internalType: "struct IConfigurable.VertexConfig[]",
            name: "vertices",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.TokenPriceConfig",
        name: "newPriceCfg",
        type: "tuple",
      },
    ],
    name: "TokenConfigChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "usd",
        type: "address",
      },
    ],
    name: "USDEnabled",
    type: "event",
  },
  {
    inputs: [],
    name: "USD",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minMarginPerLiquidityPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxRiskRatePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "minMarginPerPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidationExecutionFee",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "interestRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFundingRate",
            type: "uint32",
          },
        ],
        internalType: "struct IConfigurable.TokenConfig",
        name: "cfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "tradingFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidityFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralParentReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralDiscountRate",
            type: "uint32",
          },
        ],
        internalType: "struct IConfigurable.TokenFeeRateConfig",
        name: "feeRateCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "maxPriceImpactLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "liquidationVertexIndex",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "balanceRate",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "premiumRate",
                type: "uint32",
              },
            ],
            internalType: "struct IConfigurable.VertexConfig[]",
            name: "vertices",
            type: "tuple[]",
          },
        ],
        internalType: "struct IConfigurable.TokenPriceConfig",
        name: "priceCfg",
        type: "tuple",
      },
    ],
    name: "enableToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "isEnabledToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenConfigs",
    outputs: [
      {
        internalType: "uint64",
        name: "minMarginPerLiquidityPosition",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "maxRiskRatePerLiquidityPosition",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxLeveragePerLiquidityPosition",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "minMarginPerPosition",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "maxLeveragePerPosition",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "liquidationFeeRatePerPosition",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "liquidationExecutionFee",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "interestRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxFundingRate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenFeeRateConfigs",
    outputs: [
      {
        internalType: "uint32",
        name: "tradingFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "liquidityFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralReturnFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralParentReturnFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralDiscountRate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenPriceConfigs",
    outputs: [
      {
        internalType: "uint128",
        name: "maxPriceImpactLiquidity",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "liquidationVertexIndex",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "tokenPriceVertexConfigs",
    outputs: [
      {
        internalType: "uint32",
        name: "balanceRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "premiumRate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minMarginPerLiquidityPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxRiskRatePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "minMarginPerPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidationExecutionFee",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "interestRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFundingRate",
            type: "uint32",
          },
        ],
        internalType: "struct IConfigurable.TokenConfig",
        name: "newCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "tradingFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidityFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralParentReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralDiscountRate",
            type: "uint32",
          },
        ],
        internalType: "struct IConfigurable.TokenFeeRateConfig",
        name: "newFeeRateCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "maxPriceImpactLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "liquidationVertexIndex",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "balanceRate",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "premiumRate",
                type: "uint32",
              },
            ],
            internalType: "struct IConfigurable.VertexConfig[]",
            name: "vertices",
            type: "tuple[]",
          },
        ],
        internalType: "struct IConfigurable.TokenPriceConfig",
        name: "newPriceCfg",
        type: "tuple",
      },
    ],
    name: "updateTokenConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IConfigurable__factory {
  static readonly abi = _abi;
  static createInterface(): IConfigurableInterface {
    return new utils.Interface(_abi) as IConfigurableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConfigurable {
    return new Contract(address, _abi, signerOrProvider) as IConfigurable;
  }
}
