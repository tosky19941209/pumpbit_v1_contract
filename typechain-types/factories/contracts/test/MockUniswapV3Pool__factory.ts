/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockUniswapV3Pool,
  MockUniswapV3PoolInterface,
} from "../../../contracts/test/MockUniswapV3Pool";

const _abi = [
  {
    inputs: [],
    name: "slot0",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "observationIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "observationCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "observationCardinalityNext",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "feeProtocol",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100155760e8908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c633850c7bd14602857600080fd5b3460ae57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260ae5760e0916b028f53d88fcc5a5ada622f1582527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe98336020830152806040830152600160608301526001608083015260a0820152600160c0820152f35b5080fdfea2646970667358221220aa54908966348dcf5bc01e2c36115ef0011e5924adcb06565a85e5095365cb6c64736f6c63430008180033";

type MockUniswapV3PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapV3PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapV3Pool__factory extends ContractFactory {
  constructor(...args: MockUniswapV3PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockUniswapV3Pool> {
    return super.deploy(overrides || {}) as Promise<MockUniswapV3Pool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockUniswapV3Pool {
    return super.attach(address) as MockUniswapV3Pool;
  }
  override connect(signer: Signer): MockUniswapV3Pool__factory {
    return super.connect(signer) as MockUniswapV3Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapV3PoolInterface {
    return new utils.Interface(_abi) as MockUniswapV3PoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockUniswapV3Pool {
    return new Contract(address, _abi, signerOrProvider) as MockUniswapV3Pool;
  }
}
