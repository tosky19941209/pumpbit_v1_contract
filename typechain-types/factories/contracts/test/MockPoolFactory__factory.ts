/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockPoolFactory,
  MockPoolFactoryInterface,
} from "../../../contracts/test/MockPoolFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "isPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610166908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081635b16ebb7146100c45750639049f9d21461003757600080fd5b346100c15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c15760043573ffffffffffffffffffffffffffffffffffffffff81168091036100bd578152806020526040812060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905580f35b5080fd5b80fd5b9050346100bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bd5760043573ffffffffffffffffffffffffffffffffffffffff811680910361012c5760408360ff926020955280855220541615158152f35b8280fdfea2646970667358221220a6d75267f1cb9cd1aeef0830e977df9cd118053f1449b3a78426cf08c832ed9964736f6c63430008180033";

type MockPoolFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPoolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPoolFactory__factory extends ContractFactory {
  constructor(...args: MockPoolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockPoolFactory> {
    return super.deploy(overrides || {}) as Promise<MockPoolFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPoolFactory {
    return super.attach(address) as MockPoolFactory;
  }
  override connect(signer: Signer): MockPoolFactory__factory {
    return super.connect(signer) as MockPoolFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPoolFactoryInterface {
    return new utils.Interface(_abi) as MockPoolFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPoolFactory {
    return new Contract(address, _abi, signerOrProvider) as MockPoolFactory;
  }
}
