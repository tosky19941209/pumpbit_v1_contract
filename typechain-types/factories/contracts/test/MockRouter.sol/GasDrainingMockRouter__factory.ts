/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GasDrainingMockRouter,
  GasDrainingMockRouterInterface,
} from "../../../../contracts/test/MockRouter.sol/GasDrainingMockRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pluginAdjustLiquidityPositionMargin",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pluginCloseLiquidityPosition",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "Side",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pluginDecreasePosition",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pluginDecreaseRiskBufferFundPosition",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "Side",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    name: "pluginIncreasePosition",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    name: "pluginIncreaseRiskBufferFundPosition",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    name: "pluginOpenLiquidityPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "pluginTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576107af908161001c8239f35b600080fdfe60806040908082526004908136101561001757600080fd5b600092833560e01c92836310e8667b146104eb5783631b827878146102a25750505080632a5a2cca146102465780638c96742e146101fc578063ae39e59c146101a6578063c67f1a351461015c578063f5d01c53146101035763f86786f11461007f57600080fd5b346101005760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610100576100b661053e565b506100bf610566565b506100c861062c565b506100d16105ee565b506100da61060d565b5060a43573ffffffffffffffffffffffffffffffffffffffff811603610100575b6100fb565b80fd5b50346101005760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101005761013b61053e565b50610144610566565b5061014d6105cf565b506101566105ee565b506100fb565b50346101005760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101005761019461053e565b5061019d61063c565b506101566105ac565b50346101005760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610100576101de61053e565b506101e761063c565b5060443580600f0b0361010057610156610589565b50346101005760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101005761023461053e565b5061023d610566565b506101566105cf565b50346101005760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101005761027e61053e565b50610287610566565b5061029061062c565b506102996105ee565b5061015661060d565b908491346104e75760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104e757803573ffffffffffffffffffffffffffffffffffffffff928382168092036104e3576102fe610566565b936103076105ac565b9060208801917f23b872dd0000000000000000000000000000000000000000000000000000000083528160249716878a015216604488015260643560648801526064875260a087019067ffffffffffffffff97808310898411176104a65760e081018381108a82111761047b578452601e83527f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000060c082015251879182919082875af13d156104d1573d908882116104a6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe091845192603f81601f8401160116830199838b10908b111761047b5784959697989961041295528252818960203d92013e5b85610657565b8051908115159182610453575b5050610429578480f35b51917f5274afe7000000000000000000000000000000000000000000000000000000008352820152fd5b8192509060209181010312610477576020015180159081150361047757868061041f565b8580fd5b87896041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b86886041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6104129293949596975060609061040c565b8480fd5b8280fd5b84346101005760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101005761052361053e565b5061052c610566565b506105356105cf565b50610156610589565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361056157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361056157565b6064359073ffffffffffffffffffffffffffffffffffffffff8216820361056157565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361056157565b604435906fffffffffffffffffffffffffffffffff8216820361056157565b606435906fffffffffffffffffffffffffffffffff8216820361056157565b608435906fffffffffffffffffffffffffffffffff8216820361056157565b6044359060ff8216820361056157565b602435906bffffffffffffffffffffffff8216820361056157565b919290156106d2575081511561066b575090565b3b156106745790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156106e55750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610762575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b81810183015186820160440152859350820161072156fea26469706673582212205f446478a01cb6a4671617d9834089490b01917f453cd35113fa2cc75e78204664736f6c63430008180033";

type GasDrainingMockRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasDrainingMockRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasDrainingMockRouter__factory extends ContractFactory {
  constructor(...args: GasDrainingMockRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasDrainingMockRouter> {
    return super.deploy(overrides || {}) as Promise<GasDrainingMockRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GasDrainingMockRouter {
    return super.attach(address) as GasDrainingMockRouter;
  }
  override connect(signer: Signer): GasDrainingMockRouter__factory {
    return super.connect(signer) as GasDrainingMockRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasDrainingMockRouterInterface {
    return new utils.Interface(_abi) as GasDrainingMockRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GasDrainingMockRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GasDrainingMockRouter;
  }
}
