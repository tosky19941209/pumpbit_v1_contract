/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MixedExecutor,
  MixedExecutorInterface,
} from "../../../contracts/misc/MixedExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILiquidator",
        name: "_liquidator",
        type: "address",
      },
      {
        internalType: "contract IPositionRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IPriceFeed",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "contract IOrderBook",
        name: "_orderBook",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExecutionError",
    type: "error",
  },
  {
    inputs: [],
    name: "Forbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "ChangeGovStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "GovChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGov",
        type: "address",
      },
    ],
    name: "changeGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "_pool",
        type: "address",
      },
    ],
    name: "collectProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeAdjustLiquidityPositionMargins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeCloseLiquidityPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
    ],
    name: "executeDecreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeDecreasePositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeDecreaseRiskBufferFundPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
    ],
    name: "executeIncreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeIncreasePositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeIncreaseRiskBufferFundPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endIndex",
        type: "uint128",
      },
    ],
    name: "executeOpenLiquidityPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "executors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint160",
            name: "priceX96",
            type: "uint160",
          },
        ],
        internalType: "struct IPriceFeed.TokenPrice[]",
        name: "_tokenPrices",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "_timestamp",
        type: "uint64",
      },
    ],
    name: "fastSetPriceX96s",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_positionID",
        type: "uint96",
      },
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
    ],
    name: "liquidateLiquidityPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "Side",
        name: "_side",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidator",
    outputs: [
      {
        internalType: "contract ILiquidator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBook",
    outputs: [
      {
        internalType: "contract IOrderBook",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionRouter",
    outputs: [
      {
        internalType: "contract IPositionRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract IPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "_pool",
        type: "address",
      },
    ],
    name: "sampleAndAdjustFundingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_cancelOrderIfFailedStatus",
        type: "bool",
      },
    ],
    name: "setCancelOrderIfFailedStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint160[]",
            name: "priceX96s",
            type: "uint160[]",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct MixedExecutor.SetPricesParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "setPriceX96s",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "setTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "cancelOrderIfFailedStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610100346200016f57601f6200252c38819003918201601f19168301916001600160401b0383118484101762000174578084926080946040528339810103126200016f5780516001600160a01b039182821682036200016f5760208101519083821682036200016f5760408101519084821682036200016f576060015184811681036200016f576000543360018060a01b0319821617600055604051953391167f3d1e4c3a68fed9f4f8315582b7297cf8fa264bc8e6704287603ba8c72bf05ac2600080a360e05260c05260a0526080526003805460ff60a01b1916600160a01b1790556123a190816200018b823960805181818161153501528181611a0a0152611be5015260a0518181816104d701528181610893015281816109a8015281816111690152818161127e0152818161195501528181611c830152611f37015260c05181818161026c01528181610744015261173b015260e051818181610f7f0152818161138001526116cc0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630f707f6114611ebb5750806312d43a5114611e6a5780631a88bc6614611e0b5780631e1bff3f14611d705780632524081014611d1e5780633f6516a814611c095780634046ebae14611b9a57806343f59a8214611b065780634f64b2be14611a985780635f6494ea1461197957806361ef161f1461190a578063625adaf21461175f578063741bef1a146116f0578063776af5ba146116815780637bc6729b146115d65780638afe848f146114a85780638e2e36791461131957806390a5459414611204578063941bb2ff146110ef57806397d9de2214610f055780639ac2a01114610e9d578063a440fef914610e06578063a962ef1e14610d59578063ac9650d814610a43578063bcf7788c1461092e578063be93738614610819578063d4e06a201461069b578063efdcd97414610616578063f6116bbe14610584578063f65d21d51461045d5763fe5e07b51461017657600080fd5b34610319576020907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9180833601126104595760043567ffffffffffffffff9384821161045557604082600401918336030112610455573384526002835260ff6040852054161561042b576101eb8180612200565b9050600454916101fa8261211b565b9261020860405194856120da565b8284527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06102358461211b565b0186885b82811061040957505050865b83811061034e575b5050505073ffffffffffffffffffffffffffffffffffffffff946024867f00000000000000000000000000000000000000000000000000000000000000001693013590811680910361034a57823b1561034a57604051937f4c6f0df6000000000000000000000000000000000000000000000000000000008552604485016040600487015283518091528160648701940191875b8281106103275788808981818b8183818e8e602483015203925af1801561031c576103095750f35b610312906120aa565b6103195780f35b80fd5b6040513d84823e3d90fd5b835180518b1687528201518a1686830152604090950194928101926001016102e1565b8480fd5b818110156104045761035f81612044565b905473ffffffffffffffffffffffffffffffffffffffff6103808680612200565b8510156103d7578460051b0135918183168093036103d35790600194939291604051936103ac856120be565b60031b1c168252898201526103c182886121ec565b526103cc81876121ec565b5001610245565b8b80fd5b60248c7f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b61024d565b604051610415816120be565b8a81528a83820152828289010152018790610239565b60046040517fee90c468000000000000000000000000000000000000000000000000000000008152fd5b8380fd5b5080fd5b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004356fffffffffffffffffffffffffffffffff8116810361045957338252600260205260ff6040832054161561042b57819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690610500612254565b823b1561057f576040517fe03d62ae0000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909216600483015273ffffffffffffffffffffffffffffffffffffffff1660248201529082908290818381604481015b03925af1801561031c576103095750f35b505050fd5b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957600435801515809103610611576105c961227a565b7fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff74ff00000000000000000000000000000000000000006003549260a01b1691161760035580f35b600080fd5b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103195760043573ffffffffffffffffffffffffffffffffffffffff81168091036104595761066f61227a565b7fffffffffffffffffffffffff0000000000000000000000000000000000000000600354161760035580f35b50346103195760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004359067ffffffffffffffff808311610459573660238401121561045957826004013592818411610815573660248560061b830101116108155760243591821680920361081557338352602091600260205260ff6040852054161561042b5773ffffffffffffffffffffffffffffffffffffffff92837f00000000000000000000000000000000000000000000000000000000000000001695863b15610811579390604051947f4c6f0df60000000000000000000000000000000000000000000000000000000086528060448701604060048901525260246064870195019287925b8284106107d65788808981818e8183818f8f602483015203925af1801561031c576103095750f35b9091929395826107e588612133565b1681528187013583811680910361080d578282015260409081019601936001019291906107ae565b8980fd5b8580fd5b8280fd5b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004356fffffffffffffffffffffffffffffffff8116810361045957338252600260205260ff6040832054161561042b57819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906108bc612254565b823b1561057f576040517f890143c50000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909216600483015273ffffffffffffffffffffffffffffffffffffffff16602482015290829082908183816044810161056e565b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004356fffffffffffffffffffffffffffffffff8116810361045957338252600260205260ff6040832054161561042b57819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906109d1612254565b823b1561057f576040517f784050e10000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909216600483015273ffffffffffffffffffffffffffffffffffffffff16602482015290829082908183816044810161056e565b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103195767ffffffffffffffff60043511610319573660236004350112156103195767ffffffffffffffff6004356004013511610319573660246004356004013560051b60043501011161031957610acc6004356004013561211b565b610ad960405191826120da565b6004803501358082527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090610b0d9061211b565b01825b818110610d48575050815b600435600401358110610bab5750906040519182916020830160208452825180915260408401602060408360051b870101940192905b828210610b6057505050500390f35b91936020610b9b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc060019597998495030186528851612154565b9601920192018594939192610b51565b60248160051b6004350101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd6004353603018112156104555760043501908360248301359267ffffffffffffffff84116104595760449384820191813603831361045557610c19826121b2565b95610c2760405197886120da565b8287528236920101116108155780602092838701378401015260405191606092808481011067ffffffffffffffff8583011117610d1957838680610cf7946001978501604052602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101305af4903d15610d1357503d90610cd9826121b2565b91610ce760405193846120da565b82523d88602084013e5b3061229b565b610d0182856121ec565b52610d0c81846121ec565b5001610b1b565b90610cf1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806060602080938601015201610b10565b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957610d91612012565b610d9961227a565b73ffffffffffffffffffffffffffffffffffffffff80911690817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001558254167fb9911e2099e372c216862258dc462bb65da46a2c854536c8b1acae619d0d62ed8380a380f35b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319578073ffffffffffffffffffffffffffffffffffffffff610e54612012565b16803b15610e9a578180916004604051809481937fcaa4b46a0000000000000000000000000000000000000000000000000000000083525af1801561031c576103095750f35b50fd5b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103195760ff604060209273ffffffffffffffffffffffffffffffffffffffff610ef1612012565b168152600284522054166040519015158152f35b50346103195760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957600435610f40612035565b338352600260205260ff6040842054161561042b5773ffffffffffffffffffffffffffffffffffffffff90816003541680156000146110e9575033915b7f0000000000000000000000000000000000000000000000000000000000000000169184833b15610319576040517fe6467b690000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff929092166024830152808260448183885af191826110d5575b505061101d576110ab57829160ff60035460a01c16611023575b50505080f35b61102b612254565b823b1561057f576040517f8ec4ad8b000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff1660248201529082908290818381604481015b03925af1611097575b8061101d565b6110a0906120aa565b610319578038611091565b60046040517f2532cf45000000000000000000000000000000000000000000000000000000008152fd5b6110de906120aa565b61034a578438611003565b91610f7d565b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004356fffffffffffffffffffffffffffffffff8116810361045957338252600260205260ff6040832054161561042b57819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690611192612254565b823b1561057f576040517f7b5402c60000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909216600483015273ffffffffffffffffffffffffffffffffffffffff16602482015290829082908183816044810161056e565b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004356fffffffffffffffffffffffffffffffff8116810361045957338252600260205260ff6040832054161561042b57819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906112a7612254565b823b1561057f576040517f83011cb60000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909216600483015273ffffffffffffffffffffffffffffffffffffffff16602482015290829082908183816044810161056e565b50346103195760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957600435611354612035565b338352600260205260ff6040842054161561042b5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906113a9612254565b84833b15610319576040517f71b40c9f0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff929092166024830152808260448183885af19182611494575b505061101d576110ab57829160ff60035460a01c1661142b5750505080f35b611433612254565b823b1561057f576040517f7bae8c5a000000000000000000000000000000000000000000000000000000008152600481019290925273ffffffffffffffffffffffffffffffffffffffff166024820152908290829081838160448101611088565b61149d906120aa565b61034a57843861140c565b50346103195760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576114e0612012565b6024356bffffffffffffffffffffffff81168091036108155760443591821515830361061157338452600260205260ff6040852054161561042b57839073ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001661155d612254565b92813b1561034a5784606492848296604051998a9788967f735625e800000000000000000000000000000000000000000000000000000000885216600487015260248601521660448401525af191826115c2575b50506115be576110ab5780f35b5080f35b6115cb906120aa565b6108155782386115b1565b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103195760015473ffffffffffffffffffffffffffffffffffffffff808216330361042b577fffffffffffffffffffffffff0000000000000000000000000000000000000000809216600155825491339083161783553391167f3d1e4c3a68fed9f4f8315582b7297cf8fa264bc8e6704287603ba8c72bf05ac28380a380f35b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5034610319576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104595767ffffffffffffffff906004358281116104555736602382011215610455578060040135906117be8261211b565b906117cc60405192836120da565b828252602082016024819460051b83010191368311611906576024869101915b8383106118ee57505050506117ff61227a565b519283116118c1576801000000000000000083116118c15760045483600455808410611881575b509060048452835b838110611839578480f35b825173ffffffffffffffffffffffffffffffffffffffff167f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8201559181019160010161182e565b837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91820191015b8181106118b65750611826565b8581556001016118a9565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b81906118f984612133565b81520191019085906117ec565b8780fd5b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346103195760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576119b1612012565b60243573ffffffffffffffffffffffffffffffffffffffff91828216809203610611576044359060ff821680920361034a5760643593841515850361061157338652600260205260ff6040872054161561042b578592817f00000000000000000000000000000000000000000000000000000000000000001692611a33612254565b843b156108115785948486926084956040519a8b9889977fb9e89222000000000000000000000000000000000000000000000000000000008952166004880152602487015260448601521660648401525af191826115c25750506115be576110ab5780f35b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004359060045482101561031957602073ffffffffffffffffffffffffffffffffffffffff611af684612044565b9190546040519260031b1c168152f35b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319578073ffffffffffffffffffffffffffffffffffffffff611b54612012565b16803b15610e9a578180916004604051809481937fd634b8330000000000000000000000000000000000000000000000000000000083525af1801561031c576103095750f35b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346103195760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610319576004356fffffffffffffffffffffffffffffffff8116810361045957338252600260205260ff6040832054161561042b57819073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690611cac612254565b823b1561057f576040517f6f707c750000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909216600483015273ffffffffffffffffffffffffffffffffffffffff16602482015290829082908183816044810161056e565b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b50346103195760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957611da8612012565b73ffffffffffffffffffffffffffffffffffffffff611dc5612035565b91611dce61227a565b1682526002602052604082209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169115151617905580f35b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031957604060035460ff82519173ffffffffffffffffffffffffffffffffffffffff8116835260a01c1615156020820152f35b503461031957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103195773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b9050346104595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261045957600435906fffffffffffffffffffffffffffffffff8216820361081557338352600260205260ff60408420541615611fea57508173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611f5f612254565b90803b15610815576040517f6c5255010000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909416600485015273ffffffffffffffffffffffffffffffffffffffff909116602484015282908183816044810103925af1801561031c57611fde575080f35b611fe7906120aa565b80f35b807fee90c4680000000000000000000000000000000000000000000000000000000060049252fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361061157565b60243590811515820361061157565b60045481101561207b5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b67ffffffffffffffff8111610d1957604052565b6040810190811067ffffffffffffffff821117610d1957604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d1957604052565b67ffffffffffffffff8111610d195760051b60200190565b359073ffffffffffffffffffffffffffffffffffffffff8216820361061157565b919082519283825260005b84811061219e5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b60208183018101518483018201520161215f565b67ffffffffffffffff8111610d1957601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b805182101561207b5760209160051b010190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610611570180359067ffffffffffffffff821161061157602001918160051b3603831361061157565b60035473ffffffffffffffffffffffffffffffffffffffff168061227757503390565b90565b73ffffffffffffffffffffffffffffffffffffffff60005416330361042b57565b9192901561231657508151156122af575090565b3b156122b85790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156123295750805190602001fd5b612367906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352602060048401526024830190612154565b0390fdfea264697066735822122008fa023168f61be93250607cd45b1bb7faccf395db3d336c1bfa4a09b2f5463964736f6c63430008180033";

type MixedExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MixedExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MixedExecutor__factory extends ContractFactory {
  constructor(...args: MixedExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidator: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _priceFeed: PromiseOrValue<string>,
    _orderBook: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MixedExecutor> {
    return super.deploy(
      _liquidator,
      _router,
      _priceFeed,
      _orderBook,
      overrides || {}
    ) as Promise<MixedExecutor>;
  }
  override getDeployTransaction(
    _liquidator: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _priceFeed: PromiseOrValue<string>,
    _orderBook: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _liquidator,
      _router,
      _priceFeed,
      _orderBook,
      overrides || {}
    );
  }
  override attach(address: string): MixedExecutor {
    return super.attach(address) as MixedExecutor;
  }
  override connect(signer: Signer): MixedExecutor__factory {
    return super.connect(signer) as MixedExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MixedExecutorInterface {
    return new utils.Interface(_abi) as MixedExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MixedExecutor {
    return new Contract(address, _abi, signerOrProvider) as MixedExecutor;
  }
}
